import React, { useState } from 'react';
// Note: All styling is handled via Tailwind CSS classes for a clean, single-file structure.

// --- UTILITY COMPONENTS ---

// Reusable Card component for structure and styling
const Card = ({ title, children, className = '' }) => (
    <div className={`bg-white p-6 rounded-xl shadow-lg transition-all duration-300 transform hover:shadow-xl ${className}`}>
        {title && <h2 className="text-xl font-bold text-gray-800 mb-4 border-b pb-2">{title}</h2>}
        {children}
    </div>
);

// Navigation Bar Component
const Navbar = ({ currentPage, setPage }) => {
    const navItems = [
        { name: 'Home', component: 'Home' },
        { name: 'Alerts', component: 'Alerts' },
        { name: 'Analytics', component: 'Analytics' },
        { name: 'Community', component: 'Community' },
        { name: 'About', component: 'About' },
    ];
    return (
        <nav className="p-4 bg-gray-900 shadow-2xl sticky top-0 z-10 text-white">
            <div className="container mx-auto flex flex-wrap justify-between items-center">
                <h1 className="text-2xl font-extrabold text-green-400">SmartFishing üé£</h1>
                <div className="flex space-x-2 sm:space-x-4 overflow-x-auto py-1">
                    {navItems.map((item) => (
                        <button
                            key={item.name}
                            onClick={() => setPage(item.component)}
                            className={`px-4 py-2 rounded-full text-sm font-semibold transition-colors duration-200 ${
                                currentPage === item.component
                                    ? 'bg-green-600 text-white shadow-md transform scale-105'
                                    : 'text-gray-300 hover:bg-gray-700 hover:text-white'
                            }`}
                        >
                            {item.name}
                        </button>
                    ))}
                </div>
            </div>
        </nav>
    );
};

// Footer Component
const Footer = () => (
    <footer className="w-full text-center p-4 mt-8 bg-gray-900 text-gray-400 text-sm">
        &copy; {new Date().getFullYear()} SmartFishing | Powered by IoT & AI for Sustainable Fishing
    </footer>
);

// --- INDIVIDUAL PAGE COMPONENTS ---

/**
 * 1. HOME PAGE COMPONENT (Dashboard View - Prototype 1)
 */
const HomePageComponent = () => (
    <div className="grid grid-cols-1 lg:grid-cols-3 gap-6 animate-fadeIn">
        <div className="lg:col-span-2 space-y-6">
            {/* Predicted Fishing Zone Map */}
            <Card title="Predicted Fishing Zone (P-FZ) Map" className="h-96 bg-blue-900 text-white flex flex-col items-center justify-center">
                <svg xmlns="http://www.w3.org/2000/svg" className="h-16 w-16 text-green-400 mb-3" fill="none" viewBox="0 0 24 24" stroke="currentColor" strokeWidth={2}>
                  <path strokeLinecap="round" strokeLinejoin="round" d="M17.657 16.727A8 8 0 1118.974 7.64L19 7v10l-1.343-.727z" />
                </svg>
                <p className="text-2xl font-extrabold">Optimal Zone: N 15.234, E 74.876</p>
                <p className="text-green-300">Target confidence: 92%</p>
            </Card>

            {/* Real-time Sensor Data */}
            <Card title="Real-time Sensor Data" className="grid grid-cols-2 md:grid-cols-4 gap-4 bg-blue-50">
                <div className="text-center p-3 bg-white rounded-lg shadow-sm">
                    <p className="text-sm text-gray-500">Water Temp</p>
                    <p className="text-2xl font-bold text-blue-600">26.3¬∞C</p>
                </div>
                 <div className="text-center p-3 bg-white rounded-lg shadow-sm">
                    <p className="text-sm text-gray-500">pH Level</p>
                    <p className="text-2xl font-bold text-blue-600">8.1</p>
                </div>
                 <div className="text-center p-3 bg-white rounded-lg shadow-sm">
                    <p className="text-sm text-gray-500">Current Speed</p>
                    <p className="text-2xl font-bold text-blue-600">0.5 m/s</p>
                </div>
                <div className="text-center p-3 bg-white rounded-lg shadow-sm">
                    <p className="text-sm text-gray-500">Fish Activity</p>
                    <p className="text-2xl font-bold text-green-600">High</p>
                </div>
            </Card>
        </div>

        {/* Side Panel/Summary */}
        <div className="space-y-6">
            <Card title="AI Economic Forecast">
                <div className="text-center space-y-3">
                    <p className="text-sm text-gray-500">Expected Catch Value:</p>
                    <p className="text-4xl font-extrabold text-green-600">‚Çπ45,000</p>
                    <p className="text-sm text-gray-500 mt-2">Predicted Fuel Savings:</p>
                    <p className="text-2xl font-extrabold text-blue-600">18%</p>
                </div>
            </Card>
            <Card title="Safety Status">
                <p className="text-green-500 text-3xl font-bold text-center">ALL SYSTEMS NORMAL</p>
            </Card>
            <Card title="SOS Emergency System" className="bg-red-50">
                <button className="w-full py-3 bg-red-600 text-white text-lg font-bold rounded-xl shadow-lg hover:bg-red-700 transition transform hover:scale-[1.02]">
                    <span className="mr-2">üö®</span> ACTIVATE SOS SIGNAL
                </button>
            </Card>
        </div>
    </div>
);

/**
 * 2. ALERTS PAGE COMPONENT (Safety and Environmental Alerts - Prototype 2)
 */
const AlertsPageComponent = () => {
    const alerts = [
        { type: 'High Current Warning', date: 'Oct 8, 2025', status: 'Active', severity: 'Medium', icon: '‚ö†Ô∏è' },
        { type: 'Critical Storm Alert', date: 'Oct 3, 2025', status: 'Resolved', severity: 'High', icon: '‚õàÔ∏è' },
        { type: 'Debris Field Reported', date: 'Oct 7, 2025', status: 'Active', severity: 'Medium', icon: 'üöß' },
        { type: 'Engine Sensor Malfunction', date: 'Sep 29, 2025', status: 'Logged', severity: 'Low', icon: '‚öôÔ∏è' },
    ];

    return (
        <div className="space-y-6 animate-fadeIn">
            <div className="p-4 bg-red-100 border-l-4 border-red-500 text-red-700 rounded-lg font-semibold shadow-md flex items-center">
                <span className="text-xl mr-3">üî•</span> IMMEDIATE ACTION REQUIRED: Navigate away from area N 15.102, E 74.901 due to High Current Warning.
            </div>

            <Card title="Safety & Environmental Alert History">
                <div className="overflow-x-auto">
                    <table className="min-w-full divide-y divide-gray-200">
                        <thead className="bg-gray-50">
                            <tr>
                                <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Alert Type</th>
                                <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Date</th>
                                <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Severity</th>
                                <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
                            </tr>
                        </thead>
                        <tbody className="bg-white divide-y divide-gray-200">
                            {alerts.map((alert, index) => (
                                <tr key={index} className="hover:bg-gray-50 transition">
                                    <td className="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 flex items-center">
                                        {alert.icon} <span className="ml-2">{alert.type}</span>
                                    </td>
                                    <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{alert.date}</td>
                                    <td className="px-6 py-4 whitespace-nowrap">
                                        <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${
                                            alert.severity === 'High' ? 'bg-red-100 text-red-800' : 
                                            alert.severity === 'Medium' ? 'bg-yellow-100 text-yellow-800' : 'bg-green-100 text-green-800'
                                        }`}>
                                            {alert.severity}
                                        </span>
                                    </td>
                                    <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{alert.status}</td>
                                </tr>
                            ))}
                        </tbody>
                    </table>
                </div>
            </Card>
        </div>
    );
};

/**
 * 3. ANALYTICS PAGE COMPONENT (Performance & Financial Metrics - Prototype 4)
 */
const AnalyticsPageComponent = () => (
    <div className="space-y-6 animate-fadeIn">
        <div className="grid grid-cols-1 md:grid-cols-4 gap-6">
            <Card className="bg-green-50 text-center">
                <p className="text-sm text-gray-500">Total YTD Catch (Kg)</p>
                <p className="text-4xl font-extrabold text-green-700 mt-1">12,500</p>
            </Card>
            <Card className="bg-blue-50 text-center">
                <p className="text-sm text-gray-500">Route Efficiency Gain</p>
                <p className="text-4xl font-extrabold text-blue-700 mt-1">21.4%</p>
            </Card>
            <Card className="bg-yellow-50 text-center">
                <p className="text-sm text-gray-500">Average Trip Time (Hrs)</p>
                <p className="text-4xl font-extrabold text-yellow-700 mt-1">12.5</p>
            </Card>
            <Card className="bg-red-50 text-center">
                <p className="text-sm text-gray-500">Alerts Encountered</p>
                <p className="text-4xl font-extrabold text-red-700 mt-1">3</p>
            </Card>
        </div>

        <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
            <Card title="Catch Volume vs. Temperature Trend" className="lg:col-span-2 h-96">
                <p className="text-gray-500 italic text-center py-20">Placeholder for Recharts or D3 graph: Showing the positive correlation between higher temperature and higher catch volume over the last 6 months.</p>
            </Card>
            <Card title="Best Performing Zones" className="bg-gray-50">
                <ul className="space-y-3">
                    <li className="flex justify-between border-b pb-1"><span>Zone A:</span> <span className="font-bold text-green-600">3,100 kg</span></li>
                    <li className="flex justify-between border-b pb-1"><span>Zone C:</span> <span className="font-bold text-green-600">2,850 kg</span></li>
                    <li className="flex justify-between"><span>Zone E:</span> <span className="font-bold text-green-600">2,200 kg</span></li>
                </ul>
                <p className="text-xs text-gray-400 mt-4">Data automatically sorted by AI-predicted profitability index.</p>
            </Card>
        </div>
    </div>
);

/**
 * 4. COMMUNITY PAGE COMPONENT (Shared Sightings & Data)
 */
const CommunityPageComponent = () => {
    const [reportText, setReportText] = useState('');
    const communityReports = [
        { user: '3a2c... (Vessel 103)', type: 'Fish School Sighting', location: 'Near P-FZ', date: '2 min ago', color: 'bg-green-600', icon: 'üê†' },
        { user: '9f1e... (Vessel 211)', type: 'Large Debris Reported', location: 'Sector 5', date: '35 min ago', color: 'bg-red-600', icon: 'üóëÔ∏è' },
        { user: 'd7b8... (Vessel 155)', type: 'Unusual Current', location: 'West Zone', date: '1 hr ago', color: 'bg-yellow-600', icon: 'üåä' },
    ];

    const handleSubmitReport = (e) => {
        e.preventDefault();
        // In a real app, this would use Firestore to save the data.
        if (reportText) {
            console.log("Submitting report:", reportText);
            setReportText('');
            // Display success message using a custom modal/toast, not alert()
        }
    };

    return (
        <div className="grid grid-cols-1 lg:grid-cols-3 gap-6 animate-fadeIn">
            <div className="lg:col-span-2 space-y-6">
                <Card title="Shared Data Map (Crowdsourced Safety & Catch)">
                    <p className="h-64 bg-gray-200 border border-dashed flex items-center justify-center text-gray-500">Map showing real-time pins from other SmartFishing users.</p>
                </Card>
                <Card title="Recent Live Reports">
                    <ul className="space-y-3">
                        {communityReports.map((report, index) => (
                            <li key={index} className="flex flex-col sm:flex-row justify-between items-start sm:items-center py-3 border-b hover:bg-gray-50 p-2 rounded-lg transition">
                                <div className="flex items-center">
                                    <span className={`text-xl p-2 rounded-full ${report.color} mr-3`}>{report.icon}</span>
                                    <div>
                                        <p className="font-bold text-gray-800">{report.type}</p>
                                        <p className="text-xs text-gray-500">Reported by {report.user}</p>
                                    </div>
                                </div>
                                <span className="text-sm text-blue-600 font-semibold mt-1 sm:mt-0">{report.date}</span>
                            </li>
                        ))}
                    </ul>
                </Card>
            </div>

            <div className="lg:col-span-1">
                <Card title="Submit New Sighting">
                    <form onSubmit={handleSubmitReport} className="space-y-4">
                        <input type="text" placeholder="Type of Sighting (e.g., Debris, Net, Fish Hotspot)" className="w-full p-3 border border-gray-300 rounded-lg focus:ring-blue-500 focus:border-blue-500" required />
                        <textarea 
                            placeholder="Detailed notes on location and observation..." 
                            rows="4" 
                            className="w-full p-3 border border-gray-300 rounded-lg focus:ring-blue-500 focus:border-blue-500" 
                            value={reportText}
                            onChange={(e) => setReportText(e.target.value)}
                            required
                        ></textarea>
                        <button type="submit" className="w-full py-3 bg-blue-600 text-white font-bold rounded-lg shadow-md hover:bg-blue-700 transition transform hover:scale-[1.01]">
                            Post Sighting
                        </button>
                    </form>
                </Card>
            </div>
        </div>
    );
};

/**
 * 5. ABOUT PAGE COMPONENT (Project Information)
 */
const AboutPageComponent = () => (
    <div className="space-y-6 max-w-3xl mx-auto animate-fadeIn">
        <Card title="SmartFishing: Empowering the Local Fishing Community">
            <p className="mb-4 text-gray-700 leading-relaxed">
                SmartFishing is an innovative solution built for the ACEathon, leveraging **IoT sensors** and **Predictive AI** to modernize traditional fishing practices. Our mission is to improve fisherman safety, promote sustainability, and boost economic efficiency by providing optimal, data-backed guidance.
            </p>
            <h3 className="text-lg font-bold mt-6 mb-2 text-gray-800">Key Technology Pillars</h3>
            <ul className="list-disc list-inside space-y-2 text-gray-600 ml-4">
                <li>**Real-time Sensor Data:** Continuous monitoring of water temperature, pH, and current.</li>
                <li>**P-FZ (Predicted Fishing Zone):** AI model generating optimal coordinate suggestions for highest catch probability.</li>
                <li>**SOS Integration:** Rapid emergency signaling for enhanced maritime safety.</li>
                <li>**Community Crowdsourcing:** Shared, real-time reports on hazards and sightings.</li>
            </ul>
        </Card>
        <Card title="Development & Contact" className="bg-gray-50">
            <p className="text-sm text-gray-600">Project developed by Team AquaTech for ACEathon 2025.</p>
            <p className="text-sm text-gray-600 mt-2">Feedback: [Placeholder Email]</p>
        </Card>
    </div>
);


// --- MAIN APPLICATION COMPONENT (THE SINGLE FILE) ---

export default function App() {
    // State to manage which component (page) is currently displayed
    const [currentPage, setCurrentPage] = useState('Home');

    // Function to conditionally render the selected page component
    const renderPage = () => {
        switch (currentPage) {
            case 'Home':
                return <HomePageComponent />;
            case 'Alerts':
                return <AlertsPageComponent />;
            case 'Analytics':
                return <AnalyticsPageComponent />;
            case 'Community':
                return <CommunityPageComponent />;
            case 'About':
                return <AboutPageComponent />;
            default:
                return <HomePageComponent />;
        }
    };

    return (
        <div className="min-h-screen bg-gray-100 flex flex-col font-inter">
            {/* The Navbar handles the state change (routing) */}
            <Navbar currentPage={currentPage} setPage={setCurrentPage} />
            
            {/* The Main Content Area displays the currently selected component */}
            <main className="container mx-auto p-4 md:p-8 flex-grow">
                {renderPage()}
            </main>
            
            <Footer />
        </div>
    );
}
